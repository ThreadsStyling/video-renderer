version: 2.1

refs:
  container: &container
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/repo

commands:
  install:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - run:
          name: Versions
          command: node -v && npm -v && yarn -v
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
  build:
    steps:
      - run:
          name: Build
          command: yarn build
  test:
    steps:
      - run:
          name: Prettier Check
          command: yarn prettier:check
      - run:
          name: TSLint
          command: yarn lint
      - run:
          name: Test
          command: yarn test
      - run:
          name: Test Functional
          command: yarn test:integration
  upload_artifacts:
    steps:
      - store_artifacts:
          path: ~/repo/src/test/image-tests-out
      - run:
          name: Functional Test Output
          command: |
            if [ ! -z "$GH_TOKEN" ] || [ ! -z "$GH_STATUS_TOKEN" ]; then
              npx cross-ci :run \
                npx commit-status success Renderings \${BUILD_VERSION} "https://\${BUILD_NUM}-142040531-gh.circle-artifacts.com/0/home/circleci/repo/src/test/image-tests-out/index.html"
            fi
            npx cross-ci :run \
              echo "https://\${BUILD_NUM}-142040531-gh.circle-artifacts.com/0/home/circleci/repo/src/test/image-tests-out/index.html"

jobs:
  all:
    <<: *container
    steps:
      - checkout
      - install
      - build
      - test
      - upload_artifacts

  master:
    <<: *container
    steps:
      - checkout
      - install
      - build
      - test
      - upload_artifacts
      - run:
          name: Release
          command: npx semantic-release
      - run:
          name: Post to Slack on FAILURE
          command: 'npx ci-scripts slack --eval --channel="devchat" --text="*\${PROJECT_NAME}* master build failed: \${BUILD_URL}" --icon_emoji=tired_face'
          when: on_fail

  nightly:
    <<: *container
    steps:
      - checkout
      - install
      - build
      - test
      - upload_artifacts
      - run:
          name: Post to Slack on FAILURE
          command: 'npx ci-scripts slack --eval --channel="devchat" --text="*\${PROJECT_NAME}* nightly build failed: \${BUILD_URL}" --icon_emoji=tired_face'
          when: on_fail

workflows:
  version: 2
  all:
    jobs:
      - all:
          filters:
            branches:
              ignore:
                - master
  master:
    jobs:
      - master:
          context: common-env-vars
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: '0 1 * * *'
          filters:
            branches:
              only: master
    jobs:
      - nightly:
          context: common-env-vars
