{
  "name": "video-renderer",
  "description": "ðŸŽ¬ unified interface for expressing rendering streams for `ffmpeg` and `<canvas>`.",
  "license": "MIT",
  "keywords": [
    "ffmpeg",
    "canvas",
    "browser",
    "unified",
    "isomorphic",
    "video",
    "image",
    "editor",
    "editing",
    "typescript"
  ],
  "files": [
    "lib/",
    "browser/",
    "node/"
  ],
  "repository": "https://github.com/ThreadsStyling/video-renderer.git",
  "dependencies": {
    "expr-eval": "^1.2.2",
    "fast-af": "^0.2.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^8.1.0",
    "@moped/rule-file": "^0.0.9",
    "@threads/tsconfig": "^1.0.0",
    "@types/jest": "^23.1.1",
    "@types/node": "^10.5.2",
    "@types/rimraf": "^2.0.2",
    "commit-status": "^4.3.0",
    "cross-ci": "^1.4.0",
    "ffbinaries": "^1.1.0",
    "finalhandler": "^1.1.1",
    "html-webpack-plugin": "^3.2.0",
    "husky": "^3.0.3",
    "jest": "^24.8.0",
    "lint-staged": "^9.2.1",
    "prettier": "^1.18.2",
    "puppet-master": "^1.2.0",
    "rimraf": "^2.6.2",
    "semantic-release": "^15.8.1",
    "serve-static": "^1.13.2",
    "ts-jest": "^24.0.2",
    "ts-loader": "^4.4.2",
    "ts-node": "^7.0.1",
    "tslint": "^5.18.0",
    "typescript": "^3.5.3",
    "webpack": "^4.16.1",
    "webpack-cli": "^3.1.0",
    "webpack-serve": "^2.0.2"
  },
  "scripts": {
    "prebuild": "rimraf lib/ && rimraf browser/ && rimraf node/",
    "build": "tsc",
    "postbuild": "node generate-public && rimraf lib/**/__tests__ && rimraf lib/test && rimraf lib/demo",
    "prepare": "yarn build",
    "start": "webpack-serve ./webpack.config.js",
    "pretest": "node src/node/__tests__/download-ffmpeg",
    "test": "jest",
    "test:integration": "ts-node src/test/image.tests.ts",
    "prettier:write": "prettier --ignore-path .gitignore --write './**/*.{md,json,yaml,js,jsx,ts,tsx}'",
    "prettier:check": "prettier --ignore-path .gitignore --list-different './**/*.{md,json,yaml,js,jsx,ts,tsx}'",
    "lint": "tslint './src/**/*.{ts,tsx}' -t verbose -p ."
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "prettier --write",
      "tslint -t verbose -p .",
      "git add"
    ],
    "*.{md,json,yaml,js,jsx}": [
      "prettier --write",
      "git add"
    ]
  },
  "browserslist": [
    "last 1 Chrome version"
  ],
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "src/.*__tests__/.*\\.test\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}
